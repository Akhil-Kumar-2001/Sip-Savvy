<style>
  /* Your existing CSS styles here */
  .cart-title {
    margin-bottom: 5vh;
  }
  .cart-card {
    display: flex;
    justify-content: center;
  }
  .card {
    margin: 2rem 0rem;
    max-width: 1400px;
    width: 90%;
    border-radius: 1rem;
    border: transparent;
    background: #232323;
  }
  .cart-count a {
    text-decoration: none;
    color: #fefeeb;
    padding: 0 1vh;
  }
  .cart-count a:hover {
    color: #000;
  }
  .cart-category {
    font-size: 0.8rem;
    padding: 1rem 0rem;
  }
  .quantity button {
    color: #fefeeb;
    border: 1px solid #fefeeb;
  }
  .cart-price {
    display: flex;
    justify-content: center;
  }
  .num-product {
    background: transparent;
    border: 1px solid #fefeeb;
    width: 24%;
    border-radius: 5px;
  }
  @media (max-width: 767px) {
    .card {
      margin: 3vh auto;
    }
  }
  .cart {
    color: #fefeeb;
    background-color: #232323;
    padding: 4vh 5vh;
    border-bottom-left-radius: 1rem;
    border-top-left-radius: 1rem;
  }
  @media (max-width: 767px) {
    .cart {
      padding: 4vh;
      border-bottom-left-radius: unset;
      border-top-right-radius: 1rem;
    }
  }
  .summary {
    background-color: #ddd;
    border-top-right-radius: 1rem;
    border-bottom-right-radius: 1rem;
    padding: 4vh;
    color: rgb(65, 65, 65);
  }
  @media (max-width: 767px) {
    .summary {
      border-top-right-radius: unset;
      border-bottom-left-radius: 1rem;
    }
  }
  .summary .col-2,
  .summary .col-10 {
    padding: 0;
  }
  .row {
    margin: 0;
  }
  .cart-title b {
    font-size: 1.5rem;
  }
  .cart-main {
    margin: 0;
    padding: 2vh 0;
    width: 100%;
  }
  .col-2,
  .col {
    padding: 0 1vh;
  }
  .cart-img {
    width: 4rem;
    height: 4rem;
    border-radius: 10px;
  }
  .back-to-shop {
    margin-top: 4.5rem;
  }
  .back-shop {
    color: #fefeeb;
    padding: 0.5rem 0.5rem;
    background: #000;
    border-radius: 5px;
    text-decoration: none;
  }
  .back-shop:hover {
    background: #1a1a1a;
  }
  .cart-summary {
    margin-top: 4vh;
  }
  .summary-product {
    display: flex;
    justify-content: space-between;
  }
  .cart-line {
    margin-top: 1.25rem;
  }
  .cart-shipping {
    display: flex;
    justify-content: space-between;
  }
  .cart-product-quantity {
    width: 25%;
    display: flex;
    justify-content: center;
    gap: 0.5rem;
  }
  .cart-product-quantity input {
    width: 30%;
    background: transparent;
    color: #fefeeb;
    border: 1px solid #fefeeb;
    border-radius: 5px;
    text-align: center;
  }
  .cart-product-quantity input:focus {
    background: transparent;
    color: #fefeeb;
    outline: none;
  }
  .cart-empty {
    display: flex;
    justify-content: center;
  }
  .empty-cart {
    margin: 2rem 0rem;
    max-width: 1400px;
    width: 90%;
    border-radius: 1rem;
    border: transparent;
    background: #000;
    height: 500px;
  }
  .empty-items {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    flex-direction: column;
    gap: 1rem;
  }
  .empty-items img {
    max-width: 200px;
    border-radius: 10px;
  }
  .empty-items h2 {
    color: #fefeeb;
  }
  .empty-cart p,
  .empty-p {
    color: #fefeeb;
    margin: 0;
    text-decoration: none;
  }
  .cart-checkout {
    display: flex;
    justify-content: center;
    margin: 1rem;
  }
  .cart-checkout-button {
    width: 75%;
    height: 8%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
    background: #1a1a1a;
    color: #fefeeb;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }
  .cart-checkout-button:hover {
    background: #333;
  }
</style>

<%- include('navbar') %> <% if (cart && cart.items.length > 0) { %>
<div class="cart-card">
  <div class="card">
    <div class="row">
      <div class="col-md-8 cart">
        <div class="cart-title">
          <div class="row">
            <div class="col">
              <h4><b>Shopping Cart</b></h4>
            </div>
            <div class="col align-self-center">
              <span id="cart-item-count"><%= cart.items.length %></span> items
            </div>
          </div>
        </div>
        <% cart.items.forEach((item) => { %>
        <div
          class="row border-top border-bottom cart-main-row"
          data-product-id="<%= item.productId._id %>"
        >
          <div class="row cart-main align-items-center">
            <div class="col-2">
              <img
                class="img-fluid cart-img"
                src="/<%= item.productId.productImage[0] %>"
                alt="<%= item.productId.productName %>"
              />
            </div>
            <div class="col">
              <div class="row" id="product-name-<%= item.productId._id %>">
                <%= item.productId.productName %>
              </div>
              <div class="row cart-category">
                Category : <%= item.productId.productCategory.categoryName %>
              </div>
            </div>
            <div class="cart-product-quantity">
              <button
                class="btn btn-outline-secondary btn-sm"
                onclick="decrement('<%= item.productId._id %>')"
              >
                -
              </button>
              <input
                type="text"
                class="form-control num-product"
                id="quantity-<%= item.productId._id %>"
                value="<%= item.productCount %>"
                readonly
              />
              <button
                class="btn btn-outline-secondary btn-sm"
                onclick="increment('<%= item.productId._id %>')"
              >
                +
              </button>
            </div>
            <div class="col cart-price text-nowrap">
              <i class="fa-solid fa-indian-rupee-sign product-text-row"></i>
              &#8377;<%= item.productId.productPrice %>
            </div>
            <div
              class="col cart-price text-nowrap"
              id="line-total-<%= item.productId._id %>"
            >
              <i class="fa-solid fa-indian-rupee-sign product-text-row"></i>
              &#8377;<%= Math.floor(item.productId.productPrice * (1 -
              item.productId.productDiscount/100) *
              item.productCount).toLocaleString() %>
            </div>
            <div class="col-md-1 col-lg-1 col-xl-1 text-end">
              <a
                href="#"
                class="fs-4 text-danger delete-link"
                data-id="<%= item.productId._id %>"
              >
                <i class="bi bi-trash3"></i>
              </a>
            </div>
          </div>
        </div>
        <% }) %>
        <div class="back-to-shop">
          <a href="/home" class="back-shop"
            >&leftarrow; <span class="text-white">Back to shop</span></a
          >
        </div>
      </div>
      <div class="col-md-4 summary">
        <div>
          <h5 class="cart-summary" id="cart-summary-title"><b>Summary</b></h5>
        </div>
        <hr class="cart-line" />
        <div class="row">
          <div class="col" style="padding-left: 0" id="summary-items">
            <% cart.items.forEach((item) => { %>
            <div
              class="p-1 summary-product summary-product-row"
              data-product-id="<%= item.productId._id %>"
            >
              <div>
                <%= item.productId.productName %> x
                <span
                  class="summary-qty"
                  id="summary-qty-<%= item.productId._id %>"
                  ><%= item.productCount %></span
                >
              </div>
              <div><%= item.productId.productDiscount %> %</div>
              <div>
                <i class="fa-solid fa-indian-rupee-sign product-text-row"></i>
                <span id="summary-line-total-<%= item.productId._id %>">
                  <%= Math.floor(item.productId.productPrice -
                  item.productId.productPrice * (item.productId.productDiscount
                  / 100)).toLocaleString() %>
                </span>
              </div>
            </div>
            <% }) %>
          </div>
        </div>
        <div>
          <hr class="cart-line mt-0" />
          <h6>Delivery</h6>
          <div class="cart-shipping" id="shipping-charge">
            <% if(cart.payableAmount > 1000) { %>
            <p class="mt-2">Shipping Charge</p>
            <p>
              <i class="fa-solid fa-indian-rupee-sign product-text-row"></i>
              Free Shipping
            </p>
            <% } else { %>
            <p class="mt-2">Shipping Charge</p>
            <p>
              <i class="fa-solid fa-indian-rupee-sign product-text-row"></i> 50
            </p>
            <% } %>
          </div>
        </div>
        <div
          class="row"
          style="border-top: 1px solid rgba(0, 0, 0, 0.1); padding: 2vh 0"
        >
          <div class="col">GST</div>
          <div class="col">12%</div>
          <div
            class="col text-right d-flex justify-content-end"
            id="gst-amount"
          >
            <i class="fa-solid fa-indian-rupee-sign product-text-row"></i>
            <%= Math.round(cart.payableAmount * (12 / 100)) %>
          </div>
        </div>
        <div
          class="row"
          style="border-top: 1px solid rgba(0, 0, 0, 0.1); padding: 2vh 0"
        >
          <div class="col">TOTAL PRICE</div>
          <div
            class="col text-right d-flex justify-content-end"
            id="total-amount"
          >
            <i class="fa-solid fa-indian-rupee-sign product-text-row"></i>
            <%= (cart.payableAmount).toFixed(2) %>
          </div>
        </div>
        <div class="cart-checkout" id="cart-checkout-block">
          <% let allInStock=true; %> <% cart.items.forEach((item) => { %> <% if
          (item.productId.productQuantity <=0) { allInStock=false; } %> <% }) %>
          <% if (allInStock) { %>
          <a href="/checkout" class="btn btn-secondary cart-checkout-button"
            >CHECKOUT</a
          >
          <% } else { %>
          <p>One or more products are out of stock</p>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>
<% } else { %>
<div class="cart-empty" id="cart-empty-block">
  <div class="empty-cart">
    <div class="empty-items">
      <img
        src="/public/user/img/empty-cart-image.webp"
        alt="Empty Cart Image"
      />
      <h2 class="fw-bold">Your cart is empty!</h2>
      <p>
        Your Shopping Cart lives to serve. Give it purpose, fill it with toys.
      </p>
      <p>
        Continue shopping on the
        <a href="/home" class="empty-p">Sip Savvy's homepage</a>,
      </p>
      <p>
        learn about today's deals, or visit your
        <a href="/latestproduct" class="empty-p">New Arrivals</a>.
      </p>
      <a href="/home" class="btn btn-primary checkout">
        <i class="bi bi-arrow-left-circle" style="margin-right: 2rem"></i>Shop
        Now
      </a>
    </div>
  </div>
</div>
<% } %> <%- include('footer') %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Handle Delete Item
    document.querySelectorAll(".delete-link").forEach((element) => {
      element.addEventListener("click", function (e) {
        e.preventDefault();
        const productId = this.getAttribute("data-id");
        Swal.fire({
          title: "Are you sure?",
          text: "Do you want to remove this item from the cart?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, delete it!",
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/remove-item/${productId}`, {
              method: "DELETE",
              headers: { "Content-Type": "application/json" },
            })
              .then((res) => res.json())
              .then((data) => {
                if (data.success) {
                  Swal.fire("Deleted!", data.message, "success").then(() => {
                    const row = document.querySelector(
                      `.cart-main-row[data-product-id="${productId}"]`
                    );
                    if (row) row.remove();

                    // Update cart item count
                    const itemCount =
                      document.querySelectorAll(".cart-main-row").length;
                    document.getElementById("cart-item-count").innerText =
                      itemCount;

                    location.reload();
                  });
                } else {
                  Swal.fire("Error!", data.message, "error");
                }
              })
              .catch(() => {
                Swal.fire("Error!", "Server error occurred.", "error");
              });
          }
        });
      });
    });
  });

  async function increment(productId) {
    try {
      const res = await fetch("/cart/increment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ productId }),
      });
      if (res.ok) {
        const updatedCart = await res.json();
        updateCartUI(productId, updatedCart);
      } else {
        const error = await res.text();
        showError(error);
      }
    } catch {
      showError("An unexpected error occurred");
    }
  }

  async function decrement(productId) {
    try {
      const res = await fetch("/cart/decrement", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ productId }),
      });
      if (res.ok) {
        const updatedCart = await res.json();
        updateCartUI(productId, updatedCart);
      } else {
        const error = await res.text();
        showError(error);
      }
    } catch {
      showError("An unexpected error occurred");
    }
  }

  function showError(message) {
    Swal.fire({
      icon: "error",
      title: "Oops...",
      text: message,
    });
  }

  function updateCartUI(productId, updatedCart) {
    if (!updatedCart.items || updatedCart.items.length === 0) {
      const cartCard = document.querySelector(".cart-card");
      if (cartCard) cartCard.style.display = "none";
      const emptyCartBlock = document.getElementById("cart-empty-block");
      if (emptyCartBlock) emptyCartBlock.style.display = "flex";
      window.location.href = "/cart";

      return;
    }

    const item = updatedCart.items.find((it) => it.productId._id === productId);
    const row = document.querySelector(
      `.cart-main-row[data-product-id="${productId}"]`
    );
    const summaryRow = document.querySelector(
      `.summary-product-row[data-product-id="${productId}"]`
    );

    if (item && row) {
      // Update quantity input
      document.getElementById(`quantity-${productId}`).value =
        item.productCount;

      // Update line total price
      const discounted = Math.floor(
        item.productId.productPrice *
          (1 - item.productId.productDiscount / 100) *
          item.productCount
      );
      document.getElementById(
        `line-total-${productId}`
      ).innerHTML = `<i class="fa-solid fa-indian-rupee-sign product-text-row"></i> &#8377;${discounted.toLocaleString()}`;

      // Update summary product qty and line total
      document.getElementById(`summary-qty-${productId}`).innerText =
        item.productCount;

      const summaryUnit = Math.floor(
        item.productId.productPrice -
          item.productId.productPrice * (item.productId.productDiscount / 100)
      );
      document.getElementById(`summary-line-total-${productId}`).innerText =
        summaryUnit.toLocaleString();
    } else if (!item && row) {
      // Item removed (e.g. quantity decremented to 0)
      row.remove();
      if (summaryRow) summaryRow.remove();
    }

    // Update cart item count display
    document.getElementById("cart-item-count").innerText =
      updatedCart.items.length;

    // Update summary block (shipping, GST, total)
    updateCartSummary(updatedCart);

    // Show empty cart if no items
    if (updatedCart.items.length === 0) {
      document.querySelector(".cart-card").style.display = "none";
      document.getElementById("cart-empty-block").style.display = "flex";
    }
  }

  function updateCartSummary(updatedCart) {
    const shipBlock = document.getElementById("shipping-charge");
    if (shipBlock) {
      if (updatedCart.payableAmount > 1000) {
        shipBlock.innerHTML = `
                <p class="mt-2">Shipping Charge</p>
                <p><i class="fa-solid fa-indian-rupee-sign product-text-row"></i> Free Shipping</p>
            `;
      } else if (updatedCart.payableAmount > 0) {
        shipBlock.innerHTML = `
                <p class="mt-2">Shipping Charge</p>
                <p><i class="fa-solid fa-indian-rupee-sign product-text-row"></i> 50</p>
            `;
      }
    }
    const gstValue = Math.round(updatedCart.payableAmount * 0.12);
    document.getElementById(
      "gst-amount"
    ).innerHTML = `<i class="fa-solid fa-indian-rupee-sign product-text-row"></i> ${gstValue}`;

    document.getElementById(
      "total-amount"
    ).innerHTML = `<i class="fa-solid fa-indian-rupee-sign product-text-row"></i> ${Number(
      updatedCart.payableAmount
    ).toFixed(2)}`;

    // Update summary quantities and prices
    const summaryBlock = document.getElementById("summary-items");
    if (summaryBlock) {
      // Remove rows not in updated cart
      summaryBlock.querySelectorAll(".summary-product-row").forEach((sr) => {
        const pid = sr.getAttribute("data-product-id");
        if (!updatedCart.items.find((it) => it.productId._id === pid)) {
          sr.remove();
        }
      });
      // Update qty and line total for existing rows
      updatedCart.items.forEach((item) => {
        const qtyEl = document.getElementById(
          `summary-qty-${item.productId._id}`
        );
        if (qtyEl) qtyEl.innerText = item.productCount;

        const lineEl = document.getElementById(
          `summary-line-total-${item.productId._id}`
        );
        if (lineEl) {
          const summaryUnit = Math.floor(
            item.productId.productPrice -
              item.productId.productPrice *
                (item.productId.productDiscount / 100)
          );
          lineEl.innerText = summaryUnit.toLocaleString();
        }
      });
    }

    // Enable/disable checkout button
    const checkoutBlock = document.getElementById("cart-checkout-block");
    if (checkoutBlock) {
      const allInStock = updatedCart.items.every(
        (item) => item.productId.productQuantity > 0
      );
      if (allInStock) {
        checkoutBlock.innerHTML = `<a href="/checkout" class="btn btn-secondary cart-checkout-button">CHECKOUT</a>`;
      } else {
        checkoutBlock.innerHTML =
          "<p>One or more products are out of stock</p>";
      }
    }
  }
</script>
